version: '3'

services:

  web:
    container_name: web
    build: backend/
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code/geospatialDataHub/backend
    ports:
      - "8000:8000"
    # depends_on:
    #   - db
    command: >
      sh -c " python /backend/sleep_for_db.py &&
              python /backend/manage.py makemigrations &&
              python /backend/manage.py createsuperuser &&
              python /backend/manage.py migrate &&
              python /backend/manage.py runserver 0.0.0.0:8000"
    networks:
      - postgres_network

  client:
    build: frontend/
    command: yarn run serve
    volumes:
      - .:/code/geospatialDataHub/frontend
    depends_on:
      - web
      # - db
    environment:
      DB_URL: db:5432
    ports:
      - "8080:8080"

  self_db:
    build: self_db/
    #command: su - postgres
    #command: createuser user001
    #command: CREATE DATABASE gis;
    #command: psql -d lopocs -c 'create extension postgis'
    command: >
      bash -c "psql -d lopocs -c 'create extension postgis'
      && psql -d lopocs -c 'create extension pointcloud'
      && psql -d lopocs -c 'create extension pointcloud_postgis'
      && psql -d lopocs -c 'create extension morton'"
    environment: 
      - POSTGRES_USER=user001
      - POSTGRES_PASS=123456789
      - POSTGRES_DBNAME=lopocs
    volumes:
      - .:/code/geospatialDataHub/self_db
    ports:
      - "5432:5432"

  # self_db:
  #   #build: self_db/
  #   image: becio/lopocs
  #   #command: su - postgres
  #   #command: createuser user001
  #   #command: CREATE DATABASE gis;
  #   environment: 
  #     - POSTGRES_USER=user001
  #     - POSTGRES_PASS=123456789
  #     - POSTGRES_DBNAME=gis
  #   volumes:
  #     - .:/code/geospatialDataHub/self_db
  #   ports:
  #     - "5432:5432"

  lopocs:
    build: lopocs_new/
    #image: becio/lopocs
    #command: mkdir demos
    command: >
      bash -c "lopocs demo --work-dir demos/ --sample lyon --cesium
      && lopocs serve"
    #command: lopocs demo --work-dir lopocs_new/ --sample airport --cesium
    #command: lopocs serve
    # command: mkdir demos
    # command: lopocs demo --work-dir demos/ --sample airport --cesium
    # command: lopocs serve
    restart: always
    volumes:
      - .:/code/geospatialDataHub/lopocs_new
    depends_on:
      - web
      # - db
      - client
    ports:
      - "5000:5000"

  redis:
    image: redis
    ports:
      - "6380:6379"

  

  # db:
  #   build: database/
  #   volumes:
  #     - .:/code/geospatialDataHub/database
  #   ports:
  #     - "5432:5432"


  # db:
  #   container_name: db
  #   #build: kartoza/
  #   image: bobleujr/pointcloudpostgis
  #   #image: kartoza/postgis:9.6-2.4
  #   #image: benoc008/pgpointcloud
  #   # command: >
  #   #   sh -c " apt-get install libpdal-plugin-pgpointcloud &&
  #   #           createdb gis; &&
  #   #           CREATE EXTENSION pointcloud;"
  #   #command: apt-get install libpdal-plugin-pgpointcloud
  #   #command: createdb gis;
    
  #   #command: CREATE EXTENSION pointcloud;
  #   environment: 
  #     - POSTGRES_USER=user001
  #     - POSTGRES_PASS=123456789
  #     - POSTGRES_DBNAME=gis
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - .:/code/geospatialDataHub/database
  #   networks:
  #     - postgres_network

  # lopocs:
  #   container_name: lopocs
  #   command: lopocs serve
  #   image: becio/lopocs
  #   environment: 
  #     - PG_USER=user001
  #     - PG_PASS=123456789
  #     - PG_NAME=gis
  #     - PG_PORT=5432
  #   ports:
  #     - "5001:5001"

networks:
  postgres_network:
    driver: bridge
    
# docker run -ti -p 5000:5000 -e "PG_HOST=yourhost" -e "PG_NAME=yourdb" -e "PG_PORT=5432" -e "PG_USER=user" -e "PG_PASSWORD=password" becio/lopocs
